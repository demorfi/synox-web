#!/bin/sh

##########################################################################
# Synox console.                                                         #
#                                                                        #
# @author  demorfi <demorfi@gmail.com>                                   #
# @version 2.0                                                           #
# @source https://github.com/demorfi/synox                               #
# @license https://opensource.org/license/mit/                           #
##########################################################################

PHP=`which php`
DIR_PATH=$(dirname $(readlink -f "$0"))
export SYNOX_HOST="0.0.0.0:8282"
WEB_PATH="$DIR_PATH/web/public"

kill_prev_process()
{
  ps -efw | grep "$PHP -S $SYNOX_HOST" | grep -v grep | awk '{print $2}' | xargs kill > /dev/null 2>&1
}

bash_trap()
{
  kill_prev_process
  exit
}

exec_php()
{
  shift;
  $PHP "$DIR_PATH/synox.php" "$@"
}

open_url()
{
  if [ ! $2 ] || [ ! $2 = "silent" ]; then
    if [ -x "$BROWSER" ]; then
      exec "$BROWSER" "http://$SYNOX_HOST/"
    fi

    X_PATH=$(which xdg-open || which gnome-open)
    if [ -x "$X_PATH" ]; then
      exec "$X_PATH" "http://$SYNOX_HOST/"
    fi

    echo "can't find browser!"
  fi
}

if [ $1 ]; then
  if [ $1 = "build" ]; then
    ./make
    exit 0
  fi

  if [ $1 = "clean" ]; then
    ./make clean
    exit 0
  fi

  if [ $1 = "exec" ]; then
    kill_prev_process
    (trap 'kill 0' SIGINT; $PHP -S $SYNOX_HOST -t $WEB_PATH > /dev/null 2>&1 &) ; (exec_php "$@")
    kill_prev_process
    exit
  fi

  if [ $1 = "web" ]; then
    kill_prev_process
    ($PHP -S $SYNOX_HOST -t $WEB_PATH &) ; (open_url "$@")
    trap bash_trap INT
    while [ true ]
    do
      sleep 1
    done
  fi

  if [ $1 = "help" ]; then
    echo "synox build        : make build"
    echo "synox clean        : make clean"
    echo "synox exec [ARGS]  : execute command to synox package"
    echo "synox web [silent] : to run built-in web interface"
  fi
else
	echo "use synox help"
fi

exit 0
